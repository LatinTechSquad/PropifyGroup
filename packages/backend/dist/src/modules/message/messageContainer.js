"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageContainer = void 0;
const tsyringe_1 = require("tsyringe");
Object.defineProperty(exports, "messageContainer", { enumerable: true, get: function () { return tsyringe_1.container; } });
const createMessageController_1 = require("./infraestructure/api/createMessageController");
const createMessageUseCase_1 = require("./application/createMessage/createMessageUseCase");
const messageRepository_1 = require("./infraestructure/persistence/messageRepository");
const EncryptService_1 = require("./infraestructure/security/EncryptService");
const readMessageController_1 = require("./infraestructure/api/readMessageController");
const deleteMessageController_1 = require("./infraestructure/api/deleteMessageController");
const getMessagesUseCase_1 = require("./application/getMessagesUseCase");
const getMessageByContentController_1 = require("./infraestructure/api/getMessageByContentController");
//import { ReplyMessageController } from './infraestructure/api/replyMessageController';
const getMessagesController_1 = require("./infraestructure/api/getMessagesController");
const readMessageUseCase_1 = require("./application/readMessageUseCase");
const deleteMessageUsecase_1 = require("./application/deleteMessageUsecase");
const getMessageByEmailUseCase_1 = require("./application/getMessageByEmailUseCase");
const getMessageByEmailController_1 = require("./infraestructure/api/getMessageByEmailController");
const getMessageByContentUseCase_1 = require("./application/getMessageByContentUseCase");
const getReceivedMessagesUseCase_1 = require("./application/getReceivedMessagesUseCase");
const getReceivedMessagesController_1 = require("./infraestructure/api/getReceivedMessagesController");
const getSentMessagesUseCase_1 = require("./application/getSentMessagesUseCase");
const getSentMessagesController_1 = require("./infraestructure/api/getSentMessagesController");
tsyringe_1.container.register('messageRepository', { useClass: messageRepository_1.messageRepositoryPrisma });
tsyringe_1.container.register('EncryptService', { useClass: EncryptService_1.EncryptService });
tsyringe_1.container.register('ReadMessaUseCase', { useClass: readMessageUseCase_1.ReadMessageUseCase });
tsyringe_1.container.register('ReadMessageController', { useClass: readMessageController_1.ReadMessageController });
tsyringe_1.container.register('DeleteMessageUseCase', { useClass: deleteMessageUsecase_1.DeleteMessageUseCase });
tsyringe_1.container.register('DeleteMessageController', { useClass: deleteMessageController_1.DeleteMessageController });
tsyringe_1.container.register('CreateMessageUseCase', { useClass: createMessageUseCase_1.CreateMessageUseCase });
tsyringe_1.container.register('CreateMessageController', { useClass: createMessageController_1.CreateMessageController });
tsyringe_1.container.register('GetMessagesUseCase', { useClass: getMessagesUseCase_1.GetMessagesUseCase });
tsyringe_1.container.register('GetMessagesController', { useClass: getMessagesController_1.GetMessagesController });
tsyringe_1.container.register('GetMessageByEmailUseCase', { useClass: getMessageByEmailUseCase_1.GetMessageByEmailUseCase });
tsyringe_1.container.register('GetMessageByEmailController', { useClass: getMessageByEmailController_1.GetMessagesByEmailController });
tsyringe_1.container.register('GetMessageByContentUseCase', { useClass: getMessageByContentUseCase_1.GetMessageByContentUseCase });
tsyringe_1.container.register('GetMessageByContentController', { useClass: getMessageByContentController_1.GetMessageByContentController });
tsyringe_1.container.register('GetReceivedMessagesUseCase', { useClass: getReceivedMessagesUseCase_1.GetReceivedMessagesUseCase });
tsyringe_1.container.register('GetReceivedMessagesController', { useClass: getReceivedMessagesController_1.GetReceivedMessagesController });
tsyringe_1.container.register('GetSentMessagesUseCase', { useClass: getSentMessagesUseCase_1.GetSentMessagesUseCase });
tsyringe_1.container.register('GetSentMessagesController', { useClass: getSentMessagesController_1.GetSentMessagesController });
